
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: chatlog-postgres
    environment:
      POSTGRES_DB: chatlog
      POSTGRES_USER: chatlog_user
      POSTGRES_PASSWORD: chatlog_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./chatlog.sql:/docker-entrypoint-initdb.d/01_schema_seed.sql:ro
    networks:
      - chatlog-network

  # Spring Boot Application
  app:
    build: .
    container_name: chatlog-app
    ports:
      - "8080:8080"
    environment:
      # Database configuration
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/chatlog
      SPRING_DATASOURCE_USERNAME: chatlog_user
      SPRING_DATASOURCE_PASSWORD: chatlog_password
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver

      # JPA configuration
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: true
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect
    depends_on:
      - postgres
    networks:
      - chatlog-network

  # Frontend (Vue.js served by Nginx)
  frontend:
    build:
      context: ../log-chatbot
      dockerfile: Dockerfile
      args:
        - VITE_API_BASE_URL=/
    container_name: log-chatbot-frontend
    ports:
      - "80:80"
    depends_on:
      - app
    networks:
      - chatlog-network

volumes:
  postgres_data:

networks:
  chatlog-network:
    driver: bridge
